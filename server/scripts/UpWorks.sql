CREATE TABLE IF NOT EXISTS users (
   uid integer primary key GENERATED BY DEFAULT AS IDENTITY,
   email text NOT NULL UNIQUE CHECK (email <> ''),
   password text NOT NULL CHECK (password <> ''),
   role text NOT NULL CHECK (role = 'regular' or role = 'company' or role = 'admin')
);

CREATE TABLE IF NOT EXISTS admins (
   uid integer primary key REFERENCES users on delete cascade,
   name text NOT NULL CHECK (name <> '')
);

CREATE TABLE IF NOT EXISTS companies (
   uid integer primary key REFERENCES users on delete cascade,
   name text NOT NULL CHECK (name <> ''),
   logo text CHECK (logo <> ''),
   description text,
   web text,
   sector text,
   size text,
   sede text,
   type text,
   ceo_name text,
   cp text,
   phone text
);

CREATE TABLE IF NOT EXISTS jobs (
   id_job integer primary key GENERATED BY DEFAULT AS IDENTITY,
   uid integer REFERENCES companies on delete cascade,
   active boolean default false,
   title text NOT NULL CHECK (title <> ''),
   description text NOT NULL CHECK (description <> ''),
   ubication text NOT NULL,
   vacancies integer NOT NULL CHECK (vacancies > 0),
   job_type text NOT NULL,
   start_salary integer NOT NULL CHECK (start_salary > 0),
   end_salary integer CHECK (end_salary > 0),
   salry_type text NOT NULL,
   company_logo text NOT NULL CHECK (company_logo <> ''),
   company_name text NOT NULL CHECK (company_name <> '')
);

CREATE TABLE IF NOT EXISTS regulars (
   uid integer primary key REFERENCES users on delete cascade,
   matricula integer NOT NULL unique
);

CREATE TABLE IF NOT EXISTS profiles (
   uid integer primary key REFERENCES regulars on delete cascade,
   name text NOT NULL CHECK (name <> ''),
   photo text NOT NULL check (photo <> ''),
   gender text NOT NULL CHECK (gender = 'Hombre' or gender = 'Mujer' or gender = 'Otro'),
   birthday date,
   country text,
   state text ,
   city text ,
   cp text ,
   relocate boolean default false
);

CREATE TABLE IF NOT EXISTS contacts (
   uid integer primary key REFERENCES regulars on delete cascade,
   phone text,
   extra_phone text,
   extra_email text
);

CREATE TABLE IF NOT EXISTS titles (
   uid integer primary key REFERENCES regulars on delete cascade,
   title text CHECK (title <> ''),
   abstract text
);

CREATE TABLE IF NOT EXISTS experiences (
   id integer primary key GENERATED BY DEFAULT AS IDENTITY,
   uid integer NOT NULL references regulars on delete cascade,
   title text NOT NULL CHECK (title <> ''),
   company text NOT NULL,
   activities text,
   start date NOT NULL,
   working boolean NOT NULL,
   finish date,
   CHECK (finish > start)
);

CREATE TABLE IF NOT EXISTS educations (
   id integer primary key GENERATED BY DEFAULT AS IDENTITY,
   uid integer NOT NULL references regulars on delete cascade,
   level text NOT NULL,
   institution text NOT NULL,
   title text NOT NULL, 
   start date NOT NULL,
   studying boolean NOT NULL,
   finish date,
   CHECK (finish > start)
);

CREATE TABLE IF NOT EXISTS skills (
   id integer primary key GENERATED BY DEFAULT AS IDENTITY,
   uid integer NOT NULL references regulars on delete cascade,
   title text NOT NULL,
   years text NOT NULL
);

CREATE TABLE IF NOT EXISTS idioms (
   id integer primary key GENERATED BY DEFAULT AS IDENTITY,
   uid integer NOT NULL references regulars on delete cascade,
   title text NOT NULL,
   level text NOT NULL
);

CREATE TABLE IF NOT EXISTS links (
   id integer primary key GENERATED BY DEFAULT AS IDENTITY,
   uid integer NOT NULL references regulars on delete cascade,
   link text NOT NULL
);

CREATE TABLE IF NOT EXISTS courses (
   id integer primary key GENERATED BY DEFAULT AS IDENTITY,
   uid integer NOT NULL references regulars on delete cascade,
   title text NOT NULL CHECK (title <> ''),
   description text
);

--Ejecutar despues de crear las tablas regular, company y jobs
CREATE TABLE IF NOT EXISTS applications (
   id integer primary key GENERATED BY DEFAULT AS IDENTITY,
   id_job integer NOT NULL references jobs on delete cascade,
   uid integer NOT NULL references regulars on delete cascade,
   state text default 'postulado' CHECK (state = 'postulado' or state = 'visto' or state = 'entrevista' or state = 'contratado')
);

INSERT INTO public.users(uid ,email, password, role) VALUES
	(1, 'admin@uptapachula.edu.mx', '$2a$10$zDUzGK1J.vUZJxGAS59OC.rNxxbajyTIVrH96.IJ8EdlPa0vX7/qy', 'admin'),
   (2, 'company@uptapachula.edu.mx', '$2a$10$9TgF9QkNar5MLSd0WLOwx.D.6G1lkurkgoeCnqWOCnZ4Zf8Oh77qW', 'company'),
   (3, 'company02@uptapachula.edu.mx', '$2a$10$CZmlF26hTIr8L0aY1tF3seDjzj940257oiN8mOOHjGHvD8kUCDkBS', 'company'),
   (4, '203102@uptapachula.edu.mx', '$2a$10$7FQt9A2wyUhkW953EiQYzOafM63fLg6E.AaIT9mzyrexK/xno6466', 'regular'),
   (5, '203031@uptapachula.edu.mx', '$2a$10$wTaSICgf.Jl19E6aiJ9xLu505OMEjtIzlPbNI7jKiKtY9CpUnLq4S', 'regular'),
   (6, '203038@uptapachula.edu.mx', '$2a$10$bTLscz8HzsOXEZB.mgIOjuAy7T8MEpnBSdETkkuerGNyffwVtrCje', 'regular'),
   (7, '203563@uptapachula.edu.mx', '$2a$10$2cFJvGbmdZr6DiFDPP22Ve4Cjb/oc6dZvG7HHNZGGhQ7dLlbPSlw.', 'regular'),
   (8, '203685@uptapachula.edu.mx', '$2a$10$bQFsGJXwUE8jEW1JbGXm2OAmpX0RmcSuGMx/6cV7pwbbVqr0UvHK.', 'regular'),
   (9, '203232@uptapachula.edu.mx', '$2a$10$gBm8azN6DX9kShtp8Ps8gOIR2jNmE7DGn5NdoEGNCx6/YuUW5rjSS', 'regular'),
   (10, '223232@uptapachula.edu.mx', '$2a$10$LAJyiDphbRHwjZxMUp3iL.Jxnts4F1I.MI1/AmioZRh8McLHnPmie', 'regular'),
   (11, '203039@uptapachula.edu.mx', '$2a$10$F1PhtXi3grBf8/XvA45yYOa9MOKNMDfAno48aEkk3q2uc7kQQC7Bu', 'regular'),
   (12, '203275@uptapachula.edu.mx', '$2a$10$VDeZYQXZAt/lgyJvkmNjC.GFH4XrqRuO9cbcoTCG1WWO4eRSLlo4e', 'regular'),
   (13, 'company03@uptapachula.edu.mx', '$2a$10$sv5p7HN17Ia6KxgWU.CUv.jsxj0s62i3Da9KcqlkhhbjNFqGOS1QS', 'company'),
   (14, 'company04@uptapachula.edu.mx', '$2a$10$7vSeJdu.0.DVTenv.6QAcu0aHJDf2wjZ6cgJlK5uA4JwVhrxz41L.', 'company'),
   (15, 'company05@uptapachula.edu.mx', '$2a$10$PnH6nlQlm6B1DHpCU/eD1ex7bu/vcRrJJtCif.3TVhS6sRUUnaaY.', 'company'),
   (16, 'company06@uptapachula.edu.mx', '$2a$10$DLyLr1ElNB5jgiTA3NWt.etPwKNL/uViCpla5GSR5Pedb8OtyaEru', 'company'),
   (17, 'company07@uptapachula.edu.mx', '$2a$10$RKzZgSM5Jm6t1vRJtcsl5eqnU0veUfKJHBDCOOIKsZxFR4kRViglG', 'company');
   
INSERT INTO public.regulars(uid, matricula) VALUES 
   (4, 203102),
   (5, 203031),
   (6, 203038),
   (7, 203563),
   (8, 203685),
   (9, 203232),
   (10, 223232),
   (11, 203039),
   (12, 203275);

INSERT INTO public.profiles(uid, name, photo, gender) VALUES 
   (4,	'Jorge Luis Gordillo Canseco',	'male_avatar.svg',	'Hombre'),
   (5,	'Jose Angel Arjona Matheis',	'male_avatar.svg',	'Hombre'),
   (6,	'Cesar Eduardo Zepeda Melendez',	'male_avatar.svg',	'Hombre'),
   (7,	'Pedro Hernandez Lopez',	'male_avatar.svg',	'Hombre'),
   (8,	'Ximena Perez Martinez',	'female_avatar.svg',	'Mujer'),
   (9,	'Juan Perez Perez',	'male_avatar.svg',	'Hombre'),
   (10,	'Maria Diaz Torres',	'male_avatar.svg',	'Mujer'),
   (11,	'Eduardo Antonio Flores De León',	'male_avatar.svg',	'Hombre'),
   (12,	'Sebas Guerrero Cruz',	'male_avatar.svg',	'Hombre');

INSERT INTO public.admins(uid, name) VALUES 
   (1, 'Karina Cancino Villatoro');

INSERT INTO public.companies(uid, name, logo) VALUES 
   (2, 'Mercado Libre', 'https://www.logo.com/company1.png'),
   (3, 'Google', 'https://www.logo.com/company2.png'),
   (13, 'Amazon', 'https://www.logo.com/company3.png'),
   (14, 'Parlevel Systems Inc', 'https://www.logo.com/company4.png'),
   (15, 'Save the Children', 'https://www.logo.com/company5.png'),
   (16, 'Fondo para Niños de México, A.C.', 'https://www.logo.com/company6.png'),
   (17, 'MÉDICOS SIN FRONTERAS EN MÉXICO A.C', 'https://www.logo.com/company7.png');

INSERT INTO public.jobs(id_job, uid, title, description, ubication, vacancies, job_type, start_salary, end_salary, salry_type, company_logo, company_name) VALUES 
   (1, 2, 'Desarrollador Móvil React Native', 'DESARROLLADOR MÓVIL REACT NATIVE Zona de trabajo: Zona Centro en Culiacán, Sinaloa Requisitos: Lic. Informática, sistemas o afín. Edad: 25 - 40 años. Experiencia mínima de 3 años en programación de ', 'Culiacán, Sin.', 12, 'Tiempo completo', 30000, 70000, 'Per month', 'https://www.logo.com/company1.png', 'Mercado Libre'),
   (2, 2, 'Data Scientist', 'Excepteur ut mollit dolore exercitation deserunt. Consectetur excepteur minim incididunt anim eu incididunt ad sit. Officia cupidatat enim culpa consequat quis qui aliquip culpa sint proident aute est ullamco do.', 'Delhi', 5, 'Contract', 10000, 90000, 'Per month', 'https://www.logo.com/company1.png', 'Mercado Libre'),
   (3, 3, 'Operation Manager', 'Excepteur consequat labore cupidatat exercitation ea nisi id deserunt aliquip tempor sint. Duis fugiat cillum sit deserunt aliquip magna labore enim velit commodo. Ipsum reprehenderit cillum laboris irure mollit sit nulla incididunt. Aliquip fugiat culpa ea adipisicing eu ea tempor Lorem magna sunt.', 'Bangalore', 10, 'Fresher', 30000, 80000, 'Per Year', 'https://www.logo.com/company2.png', 'Google'),
   (4, 3, 'Javascript Developer', 'Lorem aute dolor labore mollit id dolor Lorem et enim deserunt proident. Occaecat in ut enim incididunt eiusmod deserunt. Fugiat do qui minim duis. Sunt nostrud ex dolor dolore qui reprehenderit aliquip nulla dolore. Elit excepteur laboris quis voluptate dolore deserunt dolor. Aute amet eiusmod aute nostrud ipsum occaecat.', 'Mumbai', 10, 'Full-Time', 40000, 80000, 'Per Year', 'https://www.logo.com/company2.png', 'Google'),
   (5, 3, 'Data Scientist', 'Excellent Follow-Up Skill along with very sharp memory for regular reminders,Good Command over English,Scheduling Meetings and day to day tasks,Monday to Saturday -10 am to 7 PM,Job Types: Full-time, Walk-In,Schedule:Morning shift,Experience:total work: 3 years,Education:Bachelors,Language:English,Duties.', 'Bangalore', 3,'Full-Time' , 15000, 17000, 'per month', 'https://www.logo.com/company3.png', 'Google'),
   (6, 13, 'Sr. Software Engineer', 'Parlevel is looking for engineers to change how connected retail works. Our team of entrepreneurial minded staff provide solutions that connect vending operators to consumers. From delivering premium analytics to IoT solutions and pioneering new products and international markets, we provide our clients a best in class customer experience.', 'México', 5, 'Full-Time', 6000, 70000, 'per year', 'https://www.logo.com/company3.png', 'Amazon'),
   (7, 14, 'Bpo Officcer', 'Enim pariatur aliquip dolor quis dolor non nostrud est pariatur reprehenderit amet. Laborum aute non tempor sit proident dolore id eiusmod occaecat tempor. Lorem deserunt commodo sit veniam magna elit consectetur velit ex aliquip', 'Chennai', 3, 'Contract', 10000, 80000, 'Per Month', 'https://www.logo.com/company4.png', 'Parlevel Systems Inc'),
   (8, 15, 'Sotware', 'Cillum est est minim elit ut ullamco id sunt occaecat anim dolor mollit. Sint cillum labore laborum laborum Lorem aliquip et fugiat reprehenderit mollit labore. Ullamco veniam reprehenderit tempor culpa.', 'Guadalajara', 4,'Full-Time' , 15000, 22000, 'per month', 'https://www.logo.com/company5.png', 'Save the Children'),
   (9, 16, 'React Developer', 'Deserunt dolor dolor commodo id ipsum ipsum non ullamco enim. Non proident non excepteur aliquip. Esse duis consectetur dolore quis deserunt exercitation do sit exercitation. Quis esse labore ea laboris labore ad nisi aute officia labore eu aute', 'Kolkata', 20, 'Full-Time', 90000, 180000, 'Per Year', 'https://www.logo.com/company6.png', 'Fondo para Niños de México, A.C.'),
   (10, 17, 'Sotware', 'Cillum est est minim elit ut ullamco id sunt occaecat anim dolor mollit. Sint cillum labore laborum laborum Lorem aliquip et fugiat reprehenderit mollit labore. Ullamco veniam reprehenderit tempor culpa.', 'Guadalajara', 4,'Full-Time' , 15000, 22000, 'per month', 'https://www.logo.com/company7.png', 'MÉDICOS SIN FRONTERAS EN MÉXICO A.C');

INSERT INTO public.applications(id, id_job, uid) VALUES 
   (1, 1, 4),
   (2, 2, 4),
   (3, 3, 4),
   (4, 1, 5),
   (5, 4, 6),
   (6, 4, 7),
   (7, 6, 8),
   (8, 7, 9),
   (9, 5, 10),
   (10, 2, 5);
   1,2,3,4,5,6,7,

-- 1.- Datos del alumno que ha aplicado un mayor número de veces a un empleo
SELECT nom.name, COUNT(app.id_job) AS CANTIDAD
FROM profiles nom INNER JOIN applications app ON nom.uid=app.uid
GROUP BY nom.name
HAVING COUNT(app.id_job) IN (
   SELECT MAX(RESUL.CANTIDAD)
   FROM (  SELECT uid,COUNT(id_job) AS CANTIDAD
      FROM applications
      GROUP BY uid) AS RESUL
)

-- 2.- Qué empresa es la que tiene publicados un menor número de ofertas de empleos
SELECT nom.name,COUNT(app.id_job) AS CANTIDAD
FROM companies nom INNER JOIN jobs app ON nom.uid=app.uid
GROUP BY nom.name
HAVING COUNT(app.id_job) IN (
	SELECT Min(RESUL.CANTIDAD)
	FROM (  SELECT uid,COUNT(id_job) AS CANTIDAD
		FROM jobs
		GROUP BY uid) AS RESUL
)

-- 3- A que ofertas de empleo no hay ningun estudiantes que haya aplicado
select id_job
from jobs
except
select id_job
from applications

-- 4.- Mostrar los datos del empleo y empresa que ofrece el mejor salario
select companies.uid, companies.name, jobs.id_job, jobs.title, jobs.description, jobs.ubication, jobs.vacancies, jobs.job_type, jobs.start_salary, jobs.end_salary, jobs.company_logo, jobs.company_name
from companies inner join jobs on companies.uid = jobs.uid  
where jobs.start_salary =  (SELECT MAX(jobs.start_salary) from jobs )

-- 5- Mostrar los datos de los empleos a los cuales han aplicado cada estudiante
select regulars.uid, profiles.name, jobs.id_job, jobs.title, jobs.description, jobs.ubication, jobs.vacancies, jobs.job_type, jobs.start_salary, jobs.end_salary, jobs.company_logo, jobs.company_name
from regulars inner join applications  on regulars.uid = applications.uid
	 inner join profiles on profiles.uid = regulars.uid
	 inner join jobs on jobs.id_job = applications.id_job