CREATE TABLE IF NOT EXISTS users (
   uid integer primary key GENERATED BY DEFAULT AS IDENTITY,
   email text NOT NULL UNIQUE,
   password text NOT NULL,
   role text NOT NULL CHECK (role = 'regular' or role = 'company' or role = 'admin'),
   state integer DEFAULT 0,
   created_at timestamp with time zone,
   updated_at timestamp with time zone
);

CREATE TABLE IF NOT EXISTS admins (
   id_admin integer primary key GENERATED BY DEFAULT AS IDENTITY,
   uid integer REFERENCES users on delete cascade UNIQUE,
   name text NOT NULL,
   created_at timestamp with time zone,
   updated_at timestamp with time zone
);

CREATE TABLE IF NOT EXISTS companies (
   id_company integer primary key GENERATED BY DEFAULT AS IDENTITY,
   uid integer REFERENCES users on delete cascade,
   name text NOT NULL,
   logo text,
   birthday date,
   country text,
   address text,
   created_at timestamp with time zone,
   updated_at timestamp with time zone
);

CREATE TABLE IF NOT EXISTS jobs (
   id_job integer primary key GENERATED BY DEFAULT AS IDENTITY,
   id_company integer REFERENCES companies on delete cascade,
   title text NOT NULL,
   salary integer NOT NULL,
   ubication text NOT NULL,
   type integer NOT NULL,
   description text NOT NULL,
   state integer default 0,
   created_at timestamp with time zone,
   updated_at timestamp with time zone
);

CREATE TABLE IF NOT EXISTS regulars (
   id_regular integer primary key GENERATED BY DEFAULT AS IDENTITY,
   uid integer REFERENCES users on delete cascade,
   matricula integer NOT NULL unique,
   name text NOT NULL,
   photo text,
   personal_email text,
   birthday date,
   phone text,
   ocupation text,
   abstract text,
   relocate boolean default false,
   cv text,
   created_at timestamp with time zone,
   updated_at timestamp with time zone
);

--Ejecutar despues de crear las tablas regular, company y jobs
CREATE TABLE IF NOT EXISTS applications (
   id_appli integer primary key GENERATED BY DEFAULT AS IDENTITY,
   id_job integer NOT NULL references jobs on delete cascade,
   id_regular integer NOT NULL references regulars on delete cascade,
   state integer default 0,
   message text,
   interview_date date,
   interview_time time,
   created_at timestamp with time zone,
   updated_at timestamp with time zone
);

-- INSERT INTO public.users(email, password, role) VALUES
-- 	('admin@uptapachula.edu.mx', '$2a$10$zDUzGK1J.vUZJxGAS59OC.rNxxbajyTIVrH96.IJ8EdlPa0vX7/qy', 'admin'),
--    ('company@uptapachula.edu.mx', '$2a$10$9TgF9QkNar5MLSd0WLOwx.D.6G1lkurkgoeCnqWOCnZ4Zf8Oh77qW', 'company'),
--    ('203102@uptapachula.edu.mx', '$2a$10$7FQt9A2wyUhkW953EiQYzOafM63fLg6E.AaIT9mzyrexK/xno6466', 'regular'),
--    ('203031@uptapachula.edu.mx', '$2a$10$wTaSICgf.Jl19E6aiJ9xLu505OMEjtIzlPbNI7jKiKtY9CpUnLq4S', 'regular'),
--    ('203038@uptapachula.edu.mx', '$2a$10$bTLscz8HzsOXEZB.mgIOjuAy7T8MEpnBSdETkkuerGNyffwVtrCje', 'regular'),
--    ('203039@uptapachula.edu.mx', '$2a$10$F1PhtXi3grBf8/XvA45yYOa9MOKNMDfAno48aEkk3q2uc7kQQC7Bu', 'regular'),
--    ('203275@uptapachula.edu.mx', '$2a$10$VDeZYQXZAt/lgyJvkmNjC.GFH4XrqRuO9cbcoTCG1WWO4eRSLlo4e', 'regular'),
   
-- INSERT INTO public.regulars(uid, matricula) VALUES 
--    (4, 203102),
--    (5, 203031),
--    (6, 203038),
--    (7, 203563),
--    (8, 203685),
--    (9, 203232),
--    (10, 223232),
--    (11, 203039),
--    (12, 203275);

-- INSERT INTO public.profiles(uid, name, photo, gender) VALUES 
--    (4,	'Jorge Luis Gordillo Canseco',	'male_avatar.svg',	'Hombre'),
--    (5,	'Jose Angel Arjona Matheis',	'male_avatar.svg',	'Hombre'),
--    (6,	'Cesar Eduardo Zepeda Melendez',	'male_avatar.svg',	'Hombre'),
--    (7,	'Pedro Hernandez Lopez',	'male_avatar.svg',	'Hombre'),
--    (8,	'Ximena Perez Martinez',	'female_avatar.svg',	'Mujer'),
--    (9,	'Juan Perez Perez',	'male_avatar.svg',	'Hombre'),
--    (10,	'Maria Diaz Torres',	'male_avatar.svg',	'Mujer'),
--    (11,	'Eduardo Antonio Flores De León',	'male_avatar.svg',	'Hombre'),
--    (12,	'Sebas Guerrero Cruz',	'male_avatar.svg',	'Hombre');

-- INSERT INTO public.admins(uid, name) VALUES 
--    (1, 'Karina Cancino Villatoro');

-- INSERT INTO public.companies(uid, name, logo) VALUES 
--    (2, 'Mercado Libre', 'https://www.logo.com/company1.png'),
--    (3, 'Google', 'https://www.logo.com/company2.png'),
--    (13, 'Amazon', 'https://www.logo.com/company3.png'),
--    (14, 'Parlevel Systems Inc', 'https://www.logo.com/company4.png'),
--    (15, 'Save the Children', 'https://www.logo.com/company5.png'),
--    (16, 'Fondo para Niños de México, A.C.', 'https://www.logo.com/company6.png'),
--    (17, 'MÉDICOS SIN FRONTERAS EN MÉXICO A.C', 'https://www.logo.com/company7.png');

-- INSERT INTO public.jobs(id_job, uid, title, description, ubication, vacancies, job_type, start_salary, end_salary, salry_type, company_logo, company_name) VALUES 
--    (1, 2, 'Desarrollador Móvil React Native', 'DESARROLLADOR MÓVIL REACT NATIVE Zona de trabajo: Zona Centro en Culiacán, Sinaloa Requisitos: Lic. Informática, sistemas o afín. Edad: 25 - 40 años. Experiencia mínima de 3 años en programación de ', 'Culiacán, Sin.', 12, 'Tiempo completo', 30000, 70000, 'Per month', 'https://www.logo.com/company1.png', 'Mercado Libre'),
--    (2, 2, 'Data Scientist', 'Excepteur ut mollit dolore exercitation deserunt. Consectetur excepteur minim incididunt anim eu incididunt ad sit. Officia cupidatat enim culpa consequat quis qui aliquip culpa sint proident aute est ullamco do.', 'Delhi', 5, 'Contract', 10000, 90000, 'Per month', 'https://www.logo.com/company1.png', 'Mercado Libre'),
--    (3, 3, 'Operation Manager', 'Excepteur consequat labore cupidatat exercitation ea nisi id deserunt aliquip tempor sint. Duis fugiat cillum sit deserunt aliquip magna labore enim velit commodo. Ipsum reprehenderit cillum laboris irure mollit sit nulla incididunt. Aliquip fugiat culpa ea adipisicing eu ea tempor Lorem magna sunt.', 'Bangalore', 10, 'Fresher', 30000, 80000, 'Per Year', 'https://www.logo.com/company2.png', 'Google'),
--    (4, 3, 'Javascript Developer', 'Lorem aute dolor labore mollit id dolor Lorem et enim deserunt proident. Occaecat in ut enim incididunt eiusmod deserunt. Fugiat do qui minim duis. Sunt nostrud ex dolor dolore qui reprehenderit aliquip nulla dolore. Elit excepteur laboris quis voluptate dolore deserunt dolor. Aute amet eiusmod aute nostrud ipsum occaecat.', 'Mumbai', 10, 'Full-Time', 40000, 80000, 'Per Year', 'https://www.logo.com/company2.png', 'Google'),
--    (5, 3, 'Data Scientist', 'Excellent Follow-Up Skill along with very sharp memory for regular reminders,Good Command over English,Scheduling Meetings and day to day tasks,Monday to Saturday -10 am to 7 PM,Job Types: Full-time, Walk-In,Schedule:Morning shift,Experience:total work: 3 years,Education:Bachelors,Language:English,Duties.', 'Bangalore', 3,'Full-Time' , 15000, 17000, 'per month', 'https://www.logo.com/company3.png', 'Google'),
--    (6, 13, 'Sr. Software Engineer', 'Parlevel is looking for engineers to change how connected retail works. Our team of entrepreneurial minded staff provide solutions that connect vending operators to consumers. From delivering premium analytics to IoT solutions and pioneering new products and international markets, we provide our clients a best in class customer experience.', 'México', 5, 'Full-Time', 6000, 70000, 'per year', 'https://www.logo.com/company3.png', 'Amazon'),
--    (7, 14, 'Bpo Officcer', 'Enim pariatur aliquip dolor quis dolor non nostrud est pariatur reprehenderit amet. Laborum aute non tempor sit proident dolore id eiusmod occaecat tempor. Lorem deserunt commodo sit veniam magna elit consectetur velit ex aliquip', 'Chennai', 3, 'Contract', 10000, 80000, 'Per Month', 'https://www.logo.com/company4.png', 'Parlevel Systems Inc'),
--    (8, 15, 'Sotware', 'Cillum est est minim elit ut ullamco id sunt occaecat anim dolor mollit. Sint cillum labore laborum laborum Lorem aliquip et fugiat reprehenderit mollit labore. Ullamco veniam reprehenderit tempor culpa.', 'Guadalajara', 4,'Full-Time' , 15000, 22000, 'per month', 'https://www.logo.com/company5.png', 'Save the Children'),
--    (9, 16, 'React Developer', 'Deserunt dolor dolor commodo id ipsum ipsum non ullamco enim. Non proident non excepteur aliquip. Esse duis consectetur dolore quis deserunt exercitation do sit exercitation. Quis esse labore ea laboris labore ad nisi aute officia labore eu aute', 'Kolkata', 20, 'Full-Time', 90000, 180000, 'Per Year', 'https://www.logo.com/company6.png', 'Fondo para Niños de México, A.C.'),
--    (10, 17, 'Sotware', 'Cillum est est minim elit ut ullamco id sunt occaecat anim dolor mollit. Sint cillum labore laborum laborum Lorem aliquip et fugiat reprehenderit mollit labore. Ullamco veniam reprehenderit tempor culpa.', 'Guadalajara', 4,'Full-Time' , 15000, 22000, 'per month', 'https://www.logo.com/company7.png', 'MÉDICOS SIN FRONTERAS EN MÉXICO A.C');

-- INSERT INTO public.applications(id, id_job, uid) VALUES 
--    (1, 1, 4),
--    (2, 2, 4),
--    (3, 3, 4),
--    (4, 1, 5),
--    (5, 4, 6),
--    (6, 4, 7),
--    (7, 6, 8),
--    (8, 7, 9),
--    (9, 5, 10),
--    (10, 2, 5);
--    1,2,3,4,5,6,7,

-- -- 1.- Datos del alumno que ha aplicado un mayor número de veces a un empleo
-- SELECT nom.name, COUNT(app.id_job) AS CANTIDAD
-- FROM profiles nom INNER JOIN applications app ON nom.uid=app.uid
-- GROUP BY nom.name
-- HAVING COUNT(app.id_job) IN (
--    SELECT MAX(RESUL.CANTIDAD)
--    FROM (  SELECT uid,COUNT(id_job) AS CANTIDAD
--       FROM applications
--       GROUP BY uid) AS RESUL
-- )

-- -- 2.- Qué empresa es la que tiene publicados un menor número de ofertas de empleos
-- SELECT nom.name,COUNT(app.id_job) AS CANTIDAD
-- FROM companies nom INNER JOIN jobs app ON nom.uid=app.uid
-- GROUP BY nom.name
-- HAVING COUNT(app.id_job) IN (
-- 	SELECT Min(RESUL.CANTIDAD)
-- 	FROM (  SELECT uid,COUNT(id_job) AS CANTIDAD
-- 		FROM jobs
-- 		GROUP BY uid) AS RESUL
-- )

-- -- 3- A que ofertas de empleo no hay ningun estudiantes que haya aplicado
-- select id_job
-- from jobs
-- except
-- select id_job
-- from applications

-- -- 4.- Mostrar los datos del empleo y empresa que ofrece el mejor salario
-- select companies.uid, companies.name, jobs.id_job, jobs.title, jobs.description, jobs.ubication, jobs.vacancies, jobs.job_type, jobs.start_salary, jobs.end_salary, jobs.company_logo, jobs.company_name
-- from companies inner join jobs on companies.uid = jobs.uid  
-- where jobs.start_salary =  (SELECT MAX(jobs.start_salary) from jobs )

-- -- 5- Mostrar los datos de los empleos a los cuales han aplicado cada estudiante
-- select regulars.uid, profiles.name, jobs.id_job, jobs.title, jobs.description, jobs.ubication, jobs.vacancies, jobs.job_type, jobs.start_salary, jobs.end_salary, jobs.company_logo, jobs.company_name
-- from regulars inner join applications  on regulars.uid = applications.uid
-- 	 inner join profiles on profiles.uid = regulars.uid
-- 	 inner join jobs on jobs.id_job = applications.id_job